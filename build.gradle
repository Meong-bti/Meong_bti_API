plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.12'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.prokectB'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
	set('snippetsDir', file("build/generated-snippets"))
	// snippetsDir : 테스트 실행시 생성되는 응답을 저장할 디렉토리 지정
}

configurations {
	asciidoctorExtensions
	compileOnly {
		extendsFrom annotationProcessor

	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//vault 관련
	implementation group: 'org.springframework.vault', name: 'spring-vault-core', version: '2.3.2'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	//lombok 관련
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testCompileOnly 'org.projectlombok:lombok:1.18.22' // 테스트 의존성 추가
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.22' // 테스트 의존성 추가

	//restDogs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	//db
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

}


tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}


tasks.named('asciidoctor') {
	configurations "asciidoctorExtensions"
	inputs.dir snippetsDir
	dependsOn test
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("${asciidoctor.outputDir}")
	into file("src/main/resources/static/docs")
}


build {
	dependsOn copyDocument
}


bootJar {
	dependsOn copyDocument
	from ("${asciidoctor.outputDir}") {
		into 'static/docs'
	}
}